<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
    <channel>
        <title>notes: python</title>
        <link>https://notes.zachmanson.com/python</link>
        <description>Notes tagged #python</description>
        <atom:link href="https://notes.zachmanson.com/python" rel="self" />
        <docs>http://www.rssboard.org/rss-specification</docs>
        <generator>ochrs</generator>
        <image>
            <url>https://zachmanson.com/icons/android-chrome-256x256.png</url>
            <title>notes: python</title>
            <link>https://notes.zachmanson.com/python</link>
        </image>
        <language>en</language>
        <lastBuildDate>Fri, 09 Aug 2024 06:25:31 </lastBuildDate>
        
        <item>
            <title>Poetry Showing Dependencies it Refuses to Install</title>
            <link>https://notes.zachmanson.com/poetry-showing-dependencies-it-refuses-to-install</link>
            
            <content:encoded>
                <![CDATA[<p>When Poetry lists the dependencies for a package it doesn't show the Python versions that those ranges are valid for.  For example, <a href="https://github.com/boto/botocore/blob/develop/setup.py">this</a> <code>setup.py</code>:</p>
<div class="highlight"><pre><span></span><code><span class="n">requires</span> <span class="o">=</span> <span class="p">[</span>
    <span class="s1">&#39;jmespath&gt;=0.7.1,&lt;2.0.0&#39;</span><span class="p">,</span>
    <span class="s1">&#39;python-dateutil&gt;=2.1,&lt;3.0.0&#39;</span><span class="p">,</span>
    <span class="c1"># Prior to Python 3.10, Python doesn&#39;t require openssl 1.1.1</span>
    <span class="c1"># but urllib3 2.0+ does. This means all botocore users will be</span>
    <span class="c1"># broken by default on Amazon Linux 2 and AWS Lambda without this pin.</span>
    <span class="s1">&#39;urllib3&gt;=1.25.4,&lt;1.27 ; python_version &lt; &quot;3.10&quot;&#39;</span><span class="p">,</span>
    <span class="s1">&#39;urllib3&gt;=1.25.4,!=2.2.0,&lt;3 ; python_version &gt;= &quot;3.10&quot;&#39;</span><span class="p">,</span>
<span class="p">]</span>
</code></pre></div>
<p>will not have the Python version shown when running <code>poetry show</code>, despite some the package ranges depending on the Python version of the project.  On a Python project where the <code>pyproject.toml</code> specifies Python 3.9, <code>poetry show</code> will only return the urllib3 version range that is valid for Python 3.9.</p>
<div class="highlight"><pre><span></span><code><span class="o">[</span>~/projects/prosebit<span class="o">]</span><span class="w"> </span><span class="o">(</span>develop<span class="o">)</span><span class="w">  </span>
&gt;<span class="w"> </span>head<span class="w"> </span>pyproject.toml
<span class="o">[</span>tool.poetry<span class="o">]</span>
<span class="nv">name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">&quot;prosebit&quot;</span>
<span class="nv">version</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">&quot;0.1.0&quot;</span>
<span class="nv">description</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">&quot;&quot;</span>
<span class="nv">authors</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">[</span><span class="s2">&quot;Your Name &lt;you@example.com&gt;&quot;</span><span class="o">]</span>
<span class="nv">readme</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">&quot;README.md&quot;</span>

<span class="o">[</span>tool.poetry.dependencies<span class="o">]</span>
<span class="nv">python</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">&quot;3.9&quot;</span>

<span class="o">[</span>~/projects/prosebit<span class="o">]</span><span class="w"> </span><span class="o">(</span>develop<span class="o">)</span><span class="w">  </span>
&gt;<span class="w"> </span>poetry<span class="w"> </span>show<span class="w"> </span>botocore
<span class="w"> </span>name<span class="w">         </span>:<span class="w"> </span>botocore<span class="w">                               </span>
<span class="w"> </span>version<span class="w">      </span>:<span class="w"> </span><span class="m">1</span>.34.144<span class="w">                               </span>
<span class="w"> </span>description<span class="w">  </span>:<span class="w"> </span>Low-level,<span class="w"> </span>data-driven<span class="w"> </span>core<span class="w"> </span>of<span class="w"> </span>boto<span class="w"> </span><span class="m">3</span>.<span class="w"> </span>

dependencies
<span class="w"> </span>-<span class="w"> </span>jmespath<span class="w"> </span>&gt;<span class="o">=</span><span class="m">0</span>.7.1,&lt;<span class="m">2</span>.0.0
<span class="w"> </span>-<span class="w"> </span>python-dateutil<span class="w"> </span>&gt;<span class="o">=</span><span class="m">2</span>.1,&lt;<span class="m">3</span>.0.0
<span class="w"> </span>-<span class="w"> </span>urllib3<span class="w"> </span>&gt;<span class="o">=</span><span class="m">1</span>.25.4,&lt;<span class="m">1</span>.27

required<span class="w"> </span>by
<span class="w"> </span>-<span class="w"> </span>boto3<span class="w"> </span>&gt;<span class="o">=</span><span class="m">1</span>.34.144,&lt;<span class="m">1</span>.35.0
<span class="w"> </span>-<span class="w"> </span>s3transfer<span class="w"> </span>&gt;<span class="o">=</span><span class="m">1</span>.33.2,&lt;<span class="m">2</span>.0a.0
</code></pre></div>
<p>On a Python project where the <code>pyproject.toml</code> specifies Python 3.10, <code>poetry show</code> will only return the urllib3 version range that is valid for Python 3.10.</p>
<div class="highlight"><pre><span></span><code><span class="o">[</span>~/projects/prosebit<span class="o">]</span><span class="w"> </span><span class="o">(</span>develop<span class="o">)</span><span class="w">  </span>
&gt;<span class="w"> </span>head<span class="w"> </span>pyproject.toml
<span class="o">[</span>tool.poetry<span class="o">]</span>
<span class="nv">name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">&quot;prosebit&quot;</span>
<span class="nv">version</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">&quot;0.1.0&quot;</span>
<span class="nv">description</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">&quot;&quot;</span>
<span class="nv">authors</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">[</span><span class="s2">&quot;Your Name &lt;you@example.com&gt;&quot;</span><span class="o">]</span>
<span class="nv">readme</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">&quot;README.md&quot;</span>

<span class="o">[</span>tool.poetry.dependencies<span class="o">]</span>
<span class="nv">python</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">&quot;3.10&quot;</span>

<span class="o">[</span>~/projects/prosebit<span class="o">]</span><span class="w"> </span><span class="o">(</span>develop<span class="o">)</span><span class="w">  </span>
&gt;<span class="w"> </span>poetry<span class="w"> </span>show<span class="w"> </span>botocore
<span class="w"> </span>name<span class="w">         </span>:<span class="w"> </span>botocore<span class="w">                               </span>
<span class="w"> </span>version<span class="w">      </span>:<span class="w"> </span><span class="m">1</span>.34.144<span class="w">                               </span>
<span class="w"> </span>description<span class="w">  </span>:<span class="w"> </span>Low-level,<span class="w"> </span>data-driven<span class="w"> </span>core<span class="w"> </span>of<span class="w"> </span>boto<span class="w"> </span><span class="m">3</span>.<span class="w"> </span>

dependencies
<span class="w"> </span>-<span class="w"> </span>jmespath<span class="w"> </span>&gt;<span class="o">=</span><span class="m">0</span>.7.1,&lt;<span class="m">2</span>.0.0
<span class="w"> </span>-<span class="w"> </span>python-dateutil<span class="w"> </span>&gt;<span class="o">=</span><span class="m">2</span>.1,&lt;<span class="m">3</span>.0.0
<span class="w"> </span>-<span class="w"> </span>urllib3<span class="w"> </span>&gt;<span class="o">=</span><span class="m">1</span>.25.4,&lt;<span class="m">2</span>.2.0<span class="w"> </span><span class="o">||</span><span class="w"> </span>&gt;2.2.0,&lt;<span class="m">3</span>

required<span class="w"> </span>by
<span class="w"> </span>-<span class="w"> </span>boto3<span class="w"> </span>&gt;<span class="o">=</span><span class="m">1</span>.34.144,&lt;<span class="m">1</span>.35.0
<span class="w"> </span>-<span class="w"> </span>s3transfer<span class="w"> </span>&gt;<span class="o">=</span><span class="m">1</span>.33.2,&lt;<span class="m">2</span>.0a.0
</code></pre></div>
<p>On a Python project where a range is specified that covers multiple urllib3 package ranges, <strong><code>poetry show</code> will show both ranges without specifying that the ranges apply to different Python versions</strong>.</p>
<div class="highlight"><pre><span></span><code><span class="o">[</span>~/projects/prosebit<span class="o">]</span><span class="w"> </span><span class="o">(</span>develop<span class="o">)</span><span class="w">  </span>
&gt;<span class="w"> </span>head<span class="w"> </span>pyproject.toml
<span class="o">[</span>tool.poetry<span class="o">]</span>
<span class="nv">name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">&quot;prosebit&quot;</span>
<span class="nv">version</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">&quot;0.1.0&quot;</span>
<span class="nv">description</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">&quot;&quot;</span>
<span class="nv">authors</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">[</span><span class="s2">&quot;Your Name &lt;you@example.com&gt;&quot;</span><span class="o">]</span>
<span class="nv">readme</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">&quot;README.md&quot;</span>

<span class="o">[</span>tool.poetry.dependencies<span class="o">]</span>
<span class="nv">python</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">&quot;&gt;=3.9,&lt;3.12&quot;</span>

<span class="o">[</span>~/projects/prosebit<span class="o">]</span><span class="w"> </span><span class="o">(</span>develop<span class="o">)</span><span class="w">  </span>
&gt;<span class="w"> </span>poetry<span class="w"> </span>show<span class="w"> </span>botocore
<span class="w"> </span>name<span class="w">         </span>:<span class="w"> </span>botocore<span class="w">                               </span>
<span class="w"> </span>version<span class="w">      </span>:<span class="w"> </span><span class="m">1</span>.34.144<span class="w">                               </span>
<span class="w"> </span>description<span class="w">  </span>:<span class="w"> </span>Low-level,<span class="w"> </span>data-driven<span class="w"> </span>core<span class="w"> </span>of<span class="w"> </span>boto<span class="w"> </span><span class="m">3</span>.<span class="w"> </span>

dependencies
<span class="w"> </span>-<span class="w"> </span>jmespath<span class="w"> </span>&gt;<span class="o">=</span><span class="m">0</span>.7.1,&lt;<span class="m">2</span>.0.0
<span class="w"> </span>-<span class="w"> </span>python-dateutil<span class="w"> </span>&gt;<span class="o">=</span><span class="m">2</span>.1,&lt;<span class="m">3</span>.0.0
<span class="w"> </span>-<span class="w"> </span>urllib3<span class="w"> </span>&gt;<span class="o">=</span><span class="m">1</span>.25.4,&lt;<span class="m">1</span>.27
<span class="w"> </span>-<span class="w"> </span>urllib3<span class="w"> </span>&gt;<span class="o">=</span><span class="m">1</span>.25.4,&lt;<span class="m">2</span>.2.0<span class="w"> </span><span class="o">||</span><span class="w"> </span>&gt;2.2.0,&lt;<span class="m">3</span>

required<span class="w"> </span>by
<span class="w"> </span>-<span class="w"> </span>boto3<span class="w"> </span>&gt;<span class="o">=</span><span class="m">1</span>.34.144,&lt;<span class="m">1</span>.35.0
<span class="w"> </span>-<span class="w"> </span>s3transfer<span class="w"> </span>&gt;<span class="o">=</span><span class="m">1</span>.33.2,&lt;<span class="m">2</span>.0a.0
</code></pre></div>
<p>Despite displaying both ranges in <code>poetry show</code>, <strong>Poetry will only use the oldest range when running <code>poetry lock</code> or <code>poetry install</code></strong> .  This can lead to a disconnect between the package ranges that Poetry is reporting as valid and the package ranges that Poetry will actually attempt to use when running.</p>
<p>I discovered this the hard way when trying to install <code>kinde-python-sdk</code> and <code>boto3</code> within the same project. <code>boto3</code> requires <code>botocore</code> which requires <code>urllib3</code>.  <code>kinde-python-sdk</code> also requires <code>urllib3</code>. Since my project was set to use <code>python = "&gt;=3.9,&lt;3.12"</code>, Poetry was listing both ranges in <code>poetry show</code>, but only using the range <code>urllib3 &gt;=1.25.4,&lt;1.27</code> when installing <code>botocore</code>. This resulted in headaches because <code>kinde-python-sdk</code> requires <code>urllib3 &gt;=2.2.1,&lt;2.3.0</code>, so it appeared like <code>botocore</code> and <code>kinde-python-sdk</code> could coexist when I ran <code>poetry show</code>, but failed to install every time I tried.</p>
<p>Another important detail to note is that <strong>this is all dependent on the Python version specified in <code>pyproject.toml</code>.  The Python version you are actually running does not change the behaviour of Poetry.</strong>  I ran into all of these problems when running Python 3.11, so was confused for hours.</p>
<p><code>poetry show</code> should report the Python versions that each package dependency range is valid for, since this turned a relatively simple dependency conflict into a multi-hour dependency conflict.  I was only able to figure out the exact cause by reading the setup script for <code>botocore</code>.</p>]]>
            </content:encoded>
            <guid isPermaLink="false">https://notes.zachmanson.com/poetry-showing-dependencies-it-refuses-to-install</guid>
            <pubDate>2024-07-15</pubDate>
        </item>
        
        <item>
            <title>Jinja Components</title>
            <link>https://notes.zachmanson.com/jinja-components</link>
            
            <description>Building resuable components in plain HTML using Jinja</description>
            
            <content:encoded>
                <![CDATA[<p>Building sites with vanilla HTML can be a pain in the ass if you want to redesign an element that appears in every page, like a navigation bar or footer. Static site generators solve this problem with components, but I like reinventing the wheel. Jinja templating can be used to ape components since it is capable of passing arbitrary functions into its DOM templates.</p>
<div class="highlight"><pre><span></span><code><span class="c1"># ssg.py</span>
<span class="k">def</span> <span class="nf">blog_footer</span><span class="p">():</span>
    <span class="k">return</span> <span class="s2">&quot;&quot;&quot;</span>
<span class="s2">    &lt;footer&gt;</span>
<span class="s2">      &lt;p&gt;</span>
<span class="s2">        &lt;a href=&quot;/blog/feed.xml&quot;&gt;Feed&lt;/a&gt; -</span>
<span class="s2">        &lt;a</span>
<span class="s2">          href=&quot;https://github.com/pavo-etc/pavo-etc.github.io/tree/master/generator&quot;</span>
<span class="s2">          &gt;ironprof&lt;/a</span>
<span class="s2">        &gt;</span>
<span class="s2">      &lt;/p&gt;</span>
<span class="s2">    &lt;/footer&gt;&quot;&quot;&quot;</span>

<span class="n">page_template</span> <span class="o">=</span> <span class="n">jinja2</span><span class="o">.</span><span class="n">Template</span><span class="p">(</span><span class="nb">open</span><span class="p">(</span><span class="s2">&quot;template.html&quot;</span><span class="p">,</span> <span class="s2">&quot;r&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&quot;output.html&quot;</span><span class="p">),</span> <span class="s2">&quot;w&quot;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
    <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">page_template</span><span class="o">.</span><span class="n">render</span><span class="p">({</span>
        <span class="s2">&quot;blog_footer&quot;</span><span class="p">:</span><span class="n">blog_footer</span>
    <span class="p">}))</span>
</code></pre></div>
<div class="highlight"><pre><span></span><code><span class="cm">&lt;!-- template.html --&gt;</span>
<span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
    {{ blog_footer() }}
  <span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</code></pre></div>
<div class="highlight"><pre><span></span><code><span class="cm">&lt;!-- output.html --&gt;</span>
<span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">footer</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&quot;/blog/feed.xml&quot;</span><span class="p">&gt;</span>Feed<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;</span> -
        <span class="p">&lt;</span><span class="nt">a</span>
          <span class="na">href</span><span class="o">=</span><span class="s">&quot;https://github.com/pavo-etc/pavo-etc.github.io/tree/master/generator&quot;</span>
          <span class="p">&gt;</span>ironprof<span class="p">&lt;/</span><span class="nt">a</span>
        <span class="p">&gt;</span>
      <span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="nt">footer</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</code></pre></div>
<p>This follows normal Python rules, so inheritance is followed and parameters can be passed into functions in the template.</p>
<div class="highlight"><pre><span></span><code><span class="c1"># components.py</span>
<span class="k">def</span> <span class="nf">nav</span><span class="p">(</span><span class="n">activated_link</span><span class="p">):</span>
    <span class="n">links</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;projects&quot;</span><span class="p">,</span> <span class="s2">&quot;blog&quot;</span><span class="p">]</span>
    <span class="n">link_elements</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">link</span> <span class="ow">in</span> <span class="n">links</span><span class="p">:</span>
        <span class="n">is_active</span> <span class="o">=</span> <span class="s1">&#39; activated-link&#39;</span> <span class="k">if</span> <span class="n">activated_link</span> <span class="o">==</span> <span class="n">link</span> <span class="k">else</span> <span class="s1">&#39;&#39;</span>
        <span class="n">link_elements</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;        &lt;a href=&quot;/</span><span class="si">{</span><span class="n">link</span><span class="si">}</span><span class="s1">/&quot; class=&quot;discrete-link</span><span class="si">{</span><span class="n">is_active</span><span class="si">}</span><span class="s1">&quot;&gt;</span><span class="si">{</span><span class="n">link</span><span class="o">.</span><span class="n">capitalize</span><span class="p">()</span><span class="si">}</span><span class="s1">&lt;/a&gt;&#39;</span><span class="p">)</span>

    <span class="n">right_links_str</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="se">\n</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">link_elements</span><span class="p">)</span>

    <span class="n">is_root_active</span> <span class="o">=</span> <span class="s1">&#39; activated-link&#39;</span> <span class="k">if</span> <span class="n">activated_link</span> <span class="o">==</span> <span class="s1">&#39;.&#39;</span> <span class="k">else</span> <span class="s1">&#39;&#39;</span>
    <span class="k">return</span> <span class="sa">f</span><span class="s2">&quot;&quot;&quot;</span>
<span class="s2">    &lt;nav&gt;</span>
<span class="s2">        &lt;div class=&quot;flex&quot;&gt;</span>
<span class="s2">        &lt;div class=&quot;flex-left&quot;&gt;</span>
<span class="s2">            &lt;a href=&quot;/&quot; class=&quot;discrete-link</span><span class="si">{</span><span class="n">is_root_active</span><span class="si">}</span><span class="s2">&quot;&gt;Zach Manson&lt;/a&gt;</span>
<span class="s2">        &lt;/div&gt;</span>
<span class="s2">        &lt;div class=&quot;flex-right&quot;&gt;</span>
<span class="si">{</span><span class="n">right_links_str</span><span class="si">}</span>
<span class="s2">        &lt;/div&gt;</span>
<span class="s2">        &lt;/div&gt;</span>
<span class="s2">    &lt;/nav&gt;&quot;&quot;&quot;</span>

<span class="k">def</span> <span class="nf">blog_footer</span><span class="p">():</span>
    <span class="k">return</span> <span class="s2">&quot;&quot;&quot;</span>
<span class="s2">    &lt;footer&gt;</span>
<span class="s2">      &lt;p&gt;</span>
<span class="s2">        &lt;a href=&quot;/blog/feed.xml&quot;&gt;Feed&lt;/a&gt; -</span>
<span class="s2">        &lt;a</span>
<span class="s2">          href=&quot;https://github.com/pavo-etc/pavo-etc.github.io/tree/master/generator&quot;</span>
<span class="s2">          &gt;ironprof&lt;/a</span>
<span class="s2">        &gt;</span>
<span class="s2">      &lt;/p&gt;</span>
<span class="s2">    &lt;/footer&gt;&quot;&quot;&quot;</span>
</code></pre></div>
<div class="highlight"><pre><span></span><code><span class="c1"># ssg.py</span>
<span class="kn">import</span> <span class="nn">components</span>

<span class="n">page_template</span> <span class="o">=</span> <span class="n">jinja2</span><span class="o">.</span><span class="n">Template</span><span class="p">(</span><span class="nb">open</span><span class="p">(</span><span class="s2">&quot;template.html&quot;</span><span class="p">,</span> <span class="s2">&quot;r&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&quot;output.html&quot;</span><span class="p">),</span> <span class="s2">&quot;w&quot;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
    <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">page_template</span><span class="o">.</span><span class="n">render</span><span class="p">({</span>
        <span class="s2">&quot;components&quot;</span><span class="p">:</span><span class="n">components</span>
    <span class="p">}))</span>
</code></pre></div>
<div class="highlight"><pre><span></span><code><span class="cm">&lt;!-- template.html --&gt;</span>
<span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
    {{ components.nav(&quot;blog&quot;)}}

    <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>Lorem ipsum amirite<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>

    {{ components.blog_footer() }}
  <span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</code></pre></div>
<div class="highlight"><pre><span></span><code><span class="cm">&lt;!-- outputs.html --&gt;</span>
<span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">nav</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&quot;flex&quot;</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&quot;flex-left&quot;</span><span class="p">&gt;</span>
          <span class="p">&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&quot;/&quot;</span> <span class="na">class</span><span class="o">=</span><span class="s">&quot;discrete-link&quot;</span><span class="p">&gt;</span>Zach Manson<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;</span>
        <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&quot;flex-right&quot;</span><span class="p">&gt;</span>
          <span class="p">&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&quot;/projects/&quot;</span> <span class="na">class</span><span class="o">=</span><span class="s">&quot;discrete-link&quot;</span><span class="p">&gt;</span>Projects<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;</span>
          <span class="p">&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&quot;/blog/&quot;</span> <span class="na">class</span><span class="o">=</span><span class="s">&quot;discrete-link activated-link&quot;</span><span class="p">&gt;</span>Blog<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;</span>
        <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
      <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="nt">nav</span><span class="p">&gt;</span>

    <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>Lorem ipsum amirite<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>

    <span class="p">&lt;</span><span class="nt">footer</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&quot;/blog/feed.xml&quot;</span><span class="p">&gt;</span>Feed<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;</span> -
        <span class="p">&lt;</span><span class="nt">a</span>
          <span class="na">href</span><span class="o">=</span><span class="s">&quot;https://github.com/pavo-etc/pavo-etc.github.io/tree/master/generator&quot;</span>
          <span class="p">&gt;</span>ironprof<span class="p">&lt;/</span><span class="nt">a</span>
        <span class="p">&gt;</span>
      <span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="nt">footer</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</code></pre></div>]]>
            </content:encoded>
            <guid isPermaLink="false">https://notes.zachmanson.com/jinja-components</guid>
            <pubDate>2022-11-17</pubDate>
        </item>
        
        <item>
            <title>snakeware</title>
            <link>https://notes.zachmanson.com/snakeware</link>
            
            <description>A Linux-based operating system with a pure Python userspace.</description>
            
            <content:encoded>
                <![CDATA[<p><img alt="" src="/media/snakeware.png" /></p>
<p>snakeware is an experimental <a href="/linux">Linux</a>-based OS with developed in 2020.  Its userspace is written entirely in Python, barring a single Busybox root process.  It was created by Joshua Moore drawing inspiration from the Commodore 64.  The window manager, snakewm, is written primarily with pygame_gui.  It is not based on X11 or Wayland, instead writing directly to the framebuffer (<code>/dev/fb0</code>).</p>
<p>On first boot, snakeware launches you directly a the Python interpreter.  From here you can run Python commands directly, launch the window manager, or launch CLI games.</p>
<p>To launch snakewm from the interpreter, run the <code>snakewm</code> command.  From snakewm the aopp menu can be opened using the Super key.  From here a number of applications can be launched.</p>
<p>To launch CLI games, enter the following commands:</p>
<div class="highlight"><pre><span></span><code>&gt;&gt;&gt; import snake_games
&gt;&gt;&gt; snake_games.menu()
</code></pre></div>
<p>Games included as of 2022 are snake, snakepaint, and circlez.</p>
<h2 id="history">History</h2>
<p>snakeware was a short-lived project and should be considered inactive, with most significant contributions ending in 2020.  It was created and maintained by Joshua Moore and had a small number of contributors.  Some of the applications included in snakeware never reached their intended goals, such as the included terminal emulator snaketerm which is extremely rudimentary.</p>
<p>One of the goals in making the entire userspace in Python was to make it modifiable by the user with little effort.  As Python is interpreted, all code for the window manager and the interface would be visible and modifiable by any snakeware user, and would be easy to extend.  Unfortunately, the planned text editor for snakeware, CATH, was never finished.</p>
<p>Other planned projects were networking, a chat application, and a package system built on top of PyPI called snakeoil.</p>
<p>The project was coordinated over a Discord server, though this hasn't been active for some time.</p>
<h2 id="links">Links</h2>
<ul>
<li><a href="https://github.com/joshiemoore/snakeware">snakeware source code</a></li>
<li><a href="https://github.com/Cyppa/CATH-for-Snakeware">CATH text editor</a></li>
</ul>]]>
            </content:encoded>
            <guid isPermaLink="false">https://notes.zachmanson.com/snakeware</guid>
            <pubDate>2024-03-26</pubDate>
        </item>
        

    </channel>
</rss>