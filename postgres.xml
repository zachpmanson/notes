<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
    <channel>
        <title>notes: postgres</title>
        <link>https://notes.zachmanson.com/postgres</link>
        <description>Notes tagged #postgres</description>
        <atom:link href="https://notes.zachmanson.com/postgres" rel="self" />
        <docs>http://www.rssboard.org/rss-specification</docs>
        <generator>ochrs</generator>
        <image>
            <url>https://zachmanson.com/icons/android-chrome-256x256.png</url>
            <title>notes: postgres</title>
            <link>https://notes.zachmanson.com/postgres</link>
        </image>
        <language>en</language>
        <lastBuildDate>Mon, 05 Aug 2024 07:21:04 </lastBuildDate>
        
        <item>
            <title>XZ</title>
            <link>https://notes.zachmanson.com/xz</link>
            
            <description>The most advanced supply chain attack ever found.</description>
            
            <content:encoded>
                <![CDATA[<p>The XZ exploit is a clever supply chain attack, placing a RCE in sshd using a vulnerability in XZ, a compression library that many <a href="/linux">Linux</a> distributions call when running OpenSSH (sshd -&gt; libsystemd (for systemd notifications) -&gt; liblzma (for logging)).  It was discovered by Andres Freund when he noticed that sshd was running with abnormally high CPU usage.</p>
<p>The vulnerability was submitted by Jia Tan, a maintainer of XZ project who had been an active contributor since 2021.   The vulnerability was extremely obfuscated.  <a href="https://www.openwall.com/lists/oss-security/2024/03/29/4">Read the original backdoor report by Andres Freund for more details on this</a>.</p>
<h2 id="maintainers">Maintainers</h2>
<p>There are two maintainers of the XZ projects, Jia Tan and Lasse Collin.  Lasse Collin is the original author of the XZ Utils library, whereas Jia Tan has only been a maintainer since 2022.</p>
<p>Tan appears so have little to no online footprint prior to 2021 when they started making useful contributions to XZ.  It is speculated that Jia Tan is an invented persona.</p>
<blockquote>
<p>He has been part of the xz project for 2 years, adding all sorts of binary test files, and to be honest with this level of sophistication I would be suspicious of even older versions of xz until proven otherwise.</p>
</blockquote>
<p><cite class="standalone"><a href="https://news.ycombinator.com/item?id=39866275">Richard Jones</a></cite></p>
<ul>
<li><a href="https://robmensching.com/blog/posts/2024/03/30/a-microcosm-of-the-interactions-in-open-source-projects/">A Microcosm of the interactions in Open Source projects</a>, and interesting analysis of mailing list discussions about Jia Tan's contributions to the XZ project before Tan was made maintainer</li>
<li><a href="https://tukaani.org/xz-backdoor/">Lasse Collin's page</a> tracking the vulnerability</li>
</ul>
<h2 id="features">Features</h2>
<ul>
<li>kill switch based on <a href="https://piaille.fr/@zeno/112185928685603910">environment variable</a><ul>
<li><code>yolAbejyiejuvnup=Evjtgvsh5okmkAvj</code> is hardcoded (and then obfuscated)</li>
</ul>
</li>
<li>backdoor itself is secured as it checks for a private key<ul>
<li>this is an interesting argument against "when you make a backdoor for good guys you also make a backdoor for bad guys" though that's another conversation entirely</li>
</ul>
</li>
</ul>
<h2 id="oddities">Oddities</h2>
<ul>
<li>In 2022 <a href="https://www.mail-archive.com/xz-devel@tukaani.org/msg00566.html">there were other suspected sock puppet accounts pushing Collin to introduce new maintainers</a></li>
<li>Tan disabled a function in <a href="https://github.com/google/oss-fuzz/pull/10667">oss-fuzzer</a> in 2023 that the exploit relied on that may have revealed the exploit (<a href="https://social.treehouse.systems/@Aissen/112180302735030319">source</a>)</li>
<li>the day before the exploit was found the xz-java project added a SECURITY.md file </li>
</ul>
<blockquote>
<p>If you discover a security vulnerability in this project please report it privately. <em>Do not disclose it as a public issue.</em> This gives us time to work with you to fix the issue before public exposure, reducing the chance that the exploit will be used before a patch is released.</p>
</blockquote>
<ul>
<li>It disabled Linux landlock?<ul>
<li><a href="https://git.tukaani.org/?p=xz.git;a=blobdiff;f=CMakeLists.txt;h=d2b1af7ab0ab759b6805ced3dff2555e2a4b3f8e;hp=76700591059711e3a4da5b45cf58474dac4e12a7;hb=328c52da8a2bbb81307644efdb58db2c422d9ba7;hpb=eb8ad59e9bab32a8d655796afd39597ea6dcc64d">This commit</a> introduces a syntax error that prevents Linux landlock from being activated.  The test program designed to test if landlock was supported would always fail due to this errant <code>.</code>.</li>
</ul>
</li>
<li>Tan's first GitHub PR is to libarchive and is suspect as it subtly replaces <code>safe_printf</code> calls with unsafe <code>fprintf</code></li>
</ul>
<h2 id="discovery">Discovery</h2>
<blockquote>
<p>I was doing some micro-benchmarking at the time, needed to quiesce the system to reduce noise. Saw sshd processes were using a surprising amount of CPU, despite immediately failing because of wrong usernames etc. Profiled sshd, showing lots of cpu time in liblzma, with perf unable to attribute it to a symbol. Got suspicious. Recalled that I had seen an odd valgrind complaint in automated testing of postgres, a few weeks earlier, after package updates.</p>
<p>Really required a lot of coincidences.</p>
</blockquote>
<p><cite class="standalone"><a href="https://mastodon.social/@AndresFreundTec/112180083704606941">Andres Freund (a Postgres developer at Microsoft)</a></cite></p>
<p>As noted by <a href="https://news.ycombinator.com/item?id=39879960">nurple</a> on HN, this exploit was found for similar reasons to Ken Thompson's supply chain exploit was detected.  Strange performance sparking curiosity.</p>
<h2 id="links">Links</h2>
<ul>
<li><a href="https://gist.github.com/thesamesam/223949d5a074ebc3dce9ee78baad9e27">FAQ on the exploit</a> by Sam James</li>
<li><a href="https://news.ycombinator.com/item?id=39865810">Initial discussion on hn</a></li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2024-3094">CVE-2024-3094 Report</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2024/03/29/4">Original backdoor report by Freund</a></li>
<li><a href="https://bsky.app/profile/did:plc:x2nsupeeo52oznrmplwapppl/post/3kowjkx2njy2b">Discovery of RCE</a></li>
<li><a href="https://lcamtuf.substack.com/p/technologist-vs-spy-the-xz-backdoor">Technologist vs Spy</a>, making the case that based on the behaviour and circumstances surrounding the bug were that of organised actors</li>
<li><a href="https://github.com/Midar/xz-backdoor-documentation/wiki">XZ Backdoor Documentation</a></li>
<li><a href="https://gynvael.coldwind.pl/?lang=en&amp;id=782">XZ Bash-Stage Obfuscation Explained</a></li>
<li><a href="https://arstechnica.com/security/2024/04/what-we-know-about-the-xz-utils-backdoor-that-almost-infected-the-world/"><strong>Ars Technica Overview</strong></a></li>
<li><a href="https://github.com/amlweems/xzbot">PoC</a> with substituted public key</li>
<li><a href="https://shellsharks.com/xz-compromise-link-roundup">Even more links</a></li>
<li><a href="https://research.swtch.com/xz-timeline">Timeline of XZ</a></li>
</ul>
<p><img alt="" src="/media/xz-analysis.png" /></p>]]>
            </content:encoded>
            <guid isPermaLink="false">https://notes.zachmanson.com/xz</guid>
            <pubDate>2024-03-31</pubDate>
        </item>
        

    </channel>
</rss>